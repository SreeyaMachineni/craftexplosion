name: ci cd on heroku

env:
    VERCEL_ORG_ID: ${{secrets.VERCEL_ORG_ID}}
    VERCEL_PROJECT_ID: ${{secrets.VERCEL_PROJECT_ID}}

on:
    push:
    pull_request:
    workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: install deps
        run: npm install
      - name: build docker image
        run: docker build -t craftexplosion:1.0 .

  deploy:
    name: Deploy to vercel
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKRUHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKRUHUB_USERNAME }}/craftexplosion:latest

      - name: Run the image in a container
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKRUHUB_USERNAME }}/craftexplosion:latest
          run: |
            echo "runing the docker image"

  push_to_vercel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: amondnet/vercel-action@v20
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID}} 
          vercel-project-id: ${{ secrets.PROJECT_ID}}
          vercel-args: "--prod"

      # - name: Use Node.js
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: ${{ matrix.node-version }}

      # - name: install vercel cli
      #   run: npm install --global vercel

      # - name: pull vercel env info
      #   run: vercel pull --yes --environment=production --token=${{secrets.VERCEL_TOKEN}}

      # - 

      # - name: Install dependencies
      #   run: npm install

      # - name: Build Docker Image
      #   run: docker-compose up --build -d

      #   - name: Pull and Deploy Docker Image to Heroku
      #     run: |
      #       heroku container:login
      #       heroku container:pull web next14-docker-cicd:1.0
      #       heroku container:release web -a next14-docker-cicd

      # - name: Log in to the Heroku Container Registry
      #   run: heroku container:login
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      # - name: Tag and Push Docker Image to Heroku
      #   run: |
      #     docker tag nextjs14cicd-docker:1.0 registry.heroku.com/nextjs14cicd-docker/web
      #     docker push registry.heroku.com/nextjs14cicd-docker/web
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

      # - name: Release the Image to Heroku
      #   run: heroku container:release web -a nextjs14cicd-docker
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}